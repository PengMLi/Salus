//
// Copyright 2019 Peifeng Yu <peifeng@umich.edu>
// 
// This file is part of Salus
// (see https://github.com/SymbioticLab/Salus).
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//    http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
syntax = "proto3";

package executor;

message CustomRequest {
    string type = 1;
    bytes extra = 2;
}

message CustomResponse {
    Status result = 1;
    bytes extra = 2;
}

message RunGraphRequest {
    ComputeDef computation = 1;
    bytes extra = 2;
}

message RunGraphResponse {
    Status result = 1;
    string execId = 2;
    bytes extra = 3;
}

message RunRequest {
    OpKernelDef opkernel = 1;
    OpContextDef context = 2;
    string execId = 3;
}

message RunResponse {
    Status result = 1;
    OpContextDef context = 2;
}

message DeallocRequest {
    uint64 addr_handle = 1;
}

message DeallocResponse {
    Status result = 1;
}

message AllocRequest {
    uint64 alignment = 1;
    uint64 num_bytes = 2;
}

message AllocResponse {
    Status result = 1;
    uint64 addr_handle = 2;
}

message OpKernelDef {
    OpLibraryType oplibrary = 1;
    string id = 2;
    bytes extra = 3;
}

message OpContextDef {
    bytes extra = 1;
}

message ComputeDef {
    OpLibraryType oplibrary = 1;
    bytes extra = 2;
}

message Status {
    int32 code = 1;
    string message = 2;
}

message EvenlopDef {
    string type = 1;
    uint64 seq = 2;
    bytes recvIdentity = 3;
    bytes sessionId = 4;
    OpLibraryType oplibrary = 5;
}

enum OpLibraryType {
    TENSORFLOW = 0;
}
