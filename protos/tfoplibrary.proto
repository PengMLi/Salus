syntax = "proto3";

package executor;

import "tensorflow/core/framework/node_def.proto";
import "tensorflow/core/framework/function.proto";
import "tensorflow/core/framework/tensor.proto";
import "tensorflow/core/protobuf/config.proto";
import "tensorflow/core/lib/core/error_codes.proto";

message TFOpKernelDef {
    int32 graph_def_version = 1;
    tensorflow.NodeDef nodedef = 2;
    tensorflow.ConfigProto cfgProto = 3;
    tensorflow.FunctionDefLibrary funcDef = 4;
    bool isAsync = 5;
}

message TFOpContextDef {
// Params
    int64 step_id = 1;
    uint64 frame_id = 2;
    int64 iter_id = 3;

    // SessionState
    // TensorStore
    // CancellationManager
    // CallFrame
// Inputs
    bool is_input_dead = 4;
    repeated tensorflow.TensorProto inputs = 5;
    // Input DeviceContext
    // Input AllocatorAttributes
}

message TFOpContextUpdate {
// Outputs
    bool is_output_dead = 1;
    repeated tensorflow.TensorProto outputs = 2;
    repeated TFRendezItem rendezTensors = 3;
    // Output AllocatorAttributes

    tensorflow.error.Code status_code = 4;
    string status_msg = 5;
}

message TFRendezItem {
    string key = 1;
    uint32 allocAttributes = 2;
    bool isDead = 3;
    tensorflow.TensorProto val = 4;
}

message TFRendezRecvRequests {
    repeated string key = 1;
    repeated uint32 allocAttributes = 2;
}

message TFRendezRecvResponse {
    repeated TFRendezItem items = 1;
}

message TFTensors {
    repeated tensorflow.TensorProto tensors = 1;
}

message TFPushRequest {
    repeated tensorflow.TensorProto data = 1;
    repeated tensorflow.TensorProto tensors = 2;
}
