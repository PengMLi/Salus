//
// Copyright 2019 Peifeng Yu <peifeng@umich.edu>
// 
// This file is part of Salus
// (see https://github.com/SymbioticLab/Salus).
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//    http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
syntax = "proto3";

package executor;

import "tensorflow/core/framework/node_def.proto";
import "tensorflow/core/framework/function.proto";
import "tensorflow/core/framework/tensor.proto";
import "tensorflow/core/protobuf/config.proto";
import "tensorflow/core/lib/core/error_codes.proto";

message TFSessionArgs {
    tensorflow.ConfigProto cfgProto = 1;
}

message TFSessionCreated {
    bytes sessionId = 2;
}

message TFSessionClose {
    bytes sessionId = 1;
}

message TFOpKernelDef {
    tensorflow.NodeDef nodedef = 2;
    bool isAsync = 5;
}

message TFOpContextDef {
// Params
    int64 step_id = 1;
    uint64 frame_id = 2;
    int64 iter_id = 3;

    // CancellationManager
    // CallFrame
// Inputs
    bool is_input_dead = 4;
    repeated TFTensorItem inputs = 5;
    repeated uint32 input_alloc_attrs = 6;

    repeated uint32 output_alloc_attrs = 7;
}

message TFOpContextUpdate {
// Outputs
    bool is_output_dead = 1;
    repeated TFTensorItem outputs = 2;
    repeated TFRendezItem rendezTensors = 3;
    // Output AllocatorAttributes

    tensorflow.error.Code status_code = 4;
    string status_msg = 5;
}

message TFRendezItem {
    string key = 1;
    uint32 allocAttributes = 2;
    bool isDead = 3;
    tensorflow.TensorProto val = 4;
}

message TFRendezRecvRequests {
    repeated string key = 1;
    repeated uint32 allocAttributes = 2;
}

message TFRendezRecvUpdate {
    uint64 forSeq = 1;
    repeated TFRendezItem items = 2;
}

message TFTensorItem {
    bool is_ref = 1;
    string name = 2;
    tensorflow.TensorProto meta = 3;
    bool has_value = 4;
}
